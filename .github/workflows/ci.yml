# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-22.04]
        scala: [3]
        java: [temurin@17]
        project: [rootJS, rootJVM]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt -v -J-Xmx6g +update

      - name: Check that workflows are up to date
        run: sbt -v -J-Xmx6g githubWorkflowCheck

      - name: Check headers
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-22.04'
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' headerCheckAll

      - name: scalaJSLink
        if: matrix.project == 'rootJS'
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' Test/scalaJSLinkerResult

      - name: Test
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' test

      - name: Aggregate coverage reports
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' coverageReport coverageAggregate

      - name: Upload code coverage data
        uses: codecov/codecov-action@v4

  validate-steward:
    name: Validate Steward Config
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v4

      - name: Setup Java (temurin@11)
        id: setup-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - uses: coursier/setup-action@v1
        with:
          apps: scala-steward

      - run: scala-steward validate-repo-config .scala-steward.conf

  deploy:
    name: Build and publish Docker image / Deploy to Heroku
    if: (github.ref == 'refs/heads/main' && startsWith(github.repository, 'gemini'))
    strategy:
      matrix:
        os: [ubuntu-22.04]
        scala: [3.6.4]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt -v -J-Xmx6g +update

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: modules/web/client/package-lock.json

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('modules/web/client/package-lock.json') }}
          restore-keys: node_modules

      - name: npm clean-install
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          cd modules/web/client
          npm clean-install --verbose

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username nlsoftware --password-stdin

      - name: Build and Publish Docker image
        run: 'sbt -v -J-Xmx6g ''++ ${{ matrix.scala }}'' deploy/docker:publish'

      - name: Deploy and release app in Heroku
        run: |
          npm install -g heroku
          heroku container:login
          docker tag noirlab/gpp-obs registry.heroku.com/${{ secrets.HEROKU_APP_NAME_GN }}/web
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME_GN }}/web
          heroku container:release web -a ${{ secrets.HEROKU_APP_NAME_GN }} -v
          docker tag noirlab/gpp-obs registry.heroku.com/${{ secrets.HEROKU_APP_NAME_GS }}/web
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME_GS }}/web
          heroku container:release web -a ${{ secrets.HEROKU_APP_NAME_GS }} -v
