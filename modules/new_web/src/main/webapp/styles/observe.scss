html {
  font-size: 14px !important;
  overflow: hidden; // Avoid "spring" effect when scrolling tables beyond their top/bottom.
}

.ObserveStyles-mainUI {
  height: 100vh;
  width: 100vw;
  margin-bottom: 0px;
  margin-top: 0px;
  display: flex;
  flex-direction: column;
}

.p-divider.ObserveStyles-divider {
  margin: 0 !important;
  font-weight: bold;
  font-size: 1.1rem !important;
}


.p-tabview-panels {
  height: 100%;
  padding: 0 !important;
}

.ObserveStyles-shrinkable {
  flex-grow: 2;
  min-width: 0 !important;
  min-height: 0 !important;
  overflow: auto !important;
}

.ObserveStyles-sequenceTabPanel {
  height: 100%; // Required for virtualized table within.
  min-width: 20%;

  & .p-tabview-nav-link {
    justify-content: center;
    padding: 0.5em 0.5em !important;
  }

  & .p-tabview-title {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
}

.ObserveStyles-topPanel {
  width: 100%;
}

.ObserveStyles-activeInstrumentLabel {
  padding-bottom: 0.5em;
}

.ObserveStyles-labelPointer {
  margin-top: 0.2em;
  padding: 5px 10px !important;
}

.ObserveStyles-idleTag {
  background-color: var(--gray-400) !important;
}

.ObserveStyles-runningTag {
  background-color: var(--orange-500) !important;
}

.ObserveStyles-logArea {
  .p-accordion-header-link {
    padding: 0.6em 0.8em !important;
    font-size: small;
  }
}

.ObserveStyles-footer {
  border-radius: unset !important;
  min-height: 3em;
  max-height: 3em;
  padding-top: 0 !important;
  padding-bottom: 0 !important;

  @at-root {
    .light-theme #{&} {
      background: var(--text-color) !important;
      color: var(--surface-ground) !important;
    }
  }
}

.ObserveStyles-centered {
  display: flex;
  justify-content: center;
}

.ObserveStyles-componentLabel {
  text-overflow: ellipsis;
  overflow: hidden;
  word-wrap: break-word;
  white-space: nowrap;
}

.ObserveStyles-sessionQueue {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
}

.ObserveStyles-obsClassSelect {
  .p-button {
    font-size: small !important;

    &.p-highlight {
      background: var(--green-800) !important;
      border-color: var(--green-800) !important;
    }
  }
}

// .ObserveStyles-rowPositive {
//   background-color: @positiveBackgroundColor;
//   color: @positiveTextColor;
//   box-shadow: @positiveBoxShadow;
// }

.ObserveStyles-rowWarning {
  background-color: var(--active-row-background);
  // color: @warningTextColor;
  // box-shadow: @warningBoxShadow;
}

// .ObserveStyles-rowActive {
//   background-color: @background;
//   color: @textColor;
//   box-shadow: 0px 0px 0px @textColor inset;
//   background-clip: padding-box;
// }

// .ObserveStyles-rowNegative {
//   background-color: @negativeBackgroundColor;
//   color: @negativeTextColor;
//   box-shadow: @negativeBoxShadow;
// }

// .ObserveStyles-rowError {
//   background-color: @negativeBackgroundColor;
//   color: @negativeTextColor;
//   box-shadow: @negativeBoxShadow;
// }

// .ObserveStyles-rowDisabled {
//   pointer-events: none;
//   background: @background;
//   color: @disabledTextColor;
// }

// .rowDone(@background_color) {
//   pointer-events: none;
//   color: fadein(@disabledTextColor, 30%);
//   background: @background_color;
// }

// .ObserveStyles-rowDone {
//   .rowDone(@gutter_end_color);
// }

// .ObserveStyles-rowNone {
//   background: @background;
// }

.ObserveStyles-HeaderSideBarCard {
  height: 100%;

  .p-card-body {
    height: 100%;

    .p-card-content {
      height: 100%;
      padding: 0 !important;
    }
  }
}

.ObserveStyles-HeaderSideBar {
  height: 100%;
  display: grid;
  grid-template-areas:
    "observer observer"
    "operator operator"
    "imageQuality cloudCover"
    "waterVapor skyBackground";
  column-gap: 15px;

  label {
    font-weight: bold;
    font-size: small;
    white-space: nowrap;
  }

  input {
    width: 100%;
  }

  .p-dropdown {
    width: 100%;
  }
}

.ObserveStyles-ObserverArea {
  grid-area: observer;
}

.ObserveStyles-OperatorArea {
  grid-area: operator;
}

.ObserveStyles-ImageQualityArea {
  grid-area: imageQuality;
}

.ObserveStyles-CloudCoverArea {
  grid-area: cloudCover;
}

.ObserveStyles-WaterVaporArea {
  grid-area: waterVapor;
}

.ObserveStyles-SkyBackgroundArea {
  grid-area: skyBackground;
}

.ObserveStyles-sequenceTabView {
  display: flex;
  flex-direction: column;
  height: 100%;

  .p-tabview-panels {
    overflow-x: auto;
  }
}

.ObserveStyles-configuringRow {
  display: flex;
  flex-grow: 1;
  width: 100%;
}

// .ObserveStyles-observationProgressRow {
//   display: flex;
//   flex-grow: 1;
//   flex-direction: column;
//   width: 100%;
//   padding-right: 7px;
//   margin-bottom: 1em;

//   // & .bar {
//   //   height: 100% !important;
//   // }

//   // & .label {
//   //   text-align: center;
//   //   width: 100%;
//   // }
// }

@mixin borderRight {
  border-right-style: solid;
  border-right-color: var(--surface-border);
  border-right-width: 1px;
}

@mixin borderLeft {
  border-left-style: solid;
  border-left-color: var(--surface-border);
  border-left-width: 1px;
}

@mixin borderTop {
  border-top-style: solid;
  border-top-color: var(--surface-border);
  border-top-width: 1px;
}

@mixin borderBottom {
  border-bottom-style: solid;
  border-bottom-color: var(--surface-border);
  border-bottom-width: 1px;
}

@mixin borderAll {
  @include borderRight();
  @include borderLeft();
  @include borderTop();
  @include borderBottom();
}

.ObserveStyles-observeTable {
  width: 100%;

  thead {
    z-index: 1;
  }

  th {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    padding-left: 0.75em !important;
    padding-right: 0.75em !important;
  }

  td {
    @include borderLeft;
    @include borderBottom;
    min-width: 20px;
    font-size: small;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    padding-left: 0.75em !important;
    padding-right: 0.75em !important;

    &:first-of-type {
      border-left: none;
    }
  }
}

.ObserveStyles-stepTable {
  td {
    // max-height: 40px !important;
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
}

// This will go away once we have more dynamic row heights with breakpoints, etc.
.ObserveStyles-stepRowRunning {
  height: 60px;
  background-color: var(--active-row-background);
}

.ObserveStyles-stepRowWarning {
  background-color: var(--active-row-background);
}

.ObserveStyles-stepRowDone {
  pointer-events: none;
  color: var(--disabled-row-color);
  background: var(--disabled-row-background);
}

.ObserveStyles-observationProgressBarAndLabel {
  display: flex;
  flex-direction: column;
  flex-grow: 2;
  margin-right: 0.5em;
}

.ObserveStyles-observationProgressBar {
  margin: 0 !important;
  height: 1em !important;
}

.ObserveStyles-observationProgressLabel {
  text-align: center;
  font-size: 14px;
  font-weight: bold;
}

.ObserveStyles-controlButtonStrip {
  width: unset !important; // Unset p-inputgroup's width: 100%
}

@mixin controlButton {
  color: var(--primary-50) !important;
  border: 0 !important;
  padding: 9px 19px !important;
}

.ObserveStyles-pauseButton {
  @include controlButton();
  background-color: var(--teal-500) !important;

  &:hover {
    background-color: var(--teal-600) !important;
  }
}

.ObserveStyles-stopButton {
  @include controlButton();
  background-color: var(--orange-500) !important;

  &:hover {
    background-color: var(--orange-600) !important;
  }
}

.ObserveStyles-playButton {
  @include controlButton();
  background-color: var(--blue-500) !important;

  &:hover {
    background-color: var(--blue-600) !important;
  }
}

.ObserveStyles-abortButton {
  @include controlButton();
  background-color: var(--red-500) !important;

  &:hover {
    background-color: var(--red-600) !important;
  }
}

// .ReactVirtualized__Table__headerRow {
//   font-weight: 700;
//   display: flex;
//   flex-direction: row;
//   align-items: center;
//   .borderRight();
//   .borderLeft();
//   .borderTop();
// }
// .ReactVirtualized__Table__headerColumn {
//   display: flex;
//   flex-direction: row;
//   justify-content: center;
//   padding: 0;
//   &:first-of-type {
//     border-left: none;
//   }
// }

// .ReactVirtualized__Table__headerTruncatedText {
//   padding-left: @table_row_left_padding;
// }

// .ReactVirtualized__Table__rowColumn {
//   .borderLeft();
//   min-width: 20px;
//   display: flex;
//   align-items: center;
//   font-size: small;
//   text-overflow: ellipsis;
//   white-space: nowrap;
//   height: 100%;
//   &:first-of-type {
//     border-left: none;
//   }
// }

.ObserveStyles-guidingCell {
  display: flex;
  width: 100%;
  align-items: center;
  // padding-left: @table_row_left_padding;
  // padding-right: @table_row_left_padding;
}

.ObserveStyles-offsetsBlock {
  margin-left: auto;
  display: flex;
  align-items: center;
  text-align: right;
}

.ObserveStyles-offsetsNodLabel {
  font-weight: bold;
  margin-left: 10px;
  margin-right: 3px;
}

.ObserveStyles-offsetComponent {
  display: flex;
}