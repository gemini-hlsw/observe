@import "~fomantic-ui-less/themes/default/globals/site.variables";
@import "~fomantic-ui-less/themes/default/collections/table.variables";
@import "~fomantic-ui-less/themes/default/elements/segment.variables";

@background_color_5: #f5f5f5;
@background_color_6: #f9fafb;
@table_row_left_padding: 1em;
@table_detail_row_right_padding: 2em;
@table_detail_row_top_padding: 1em;
@table_detail_row_bottom_padding: 1em;
@breakpoint_line_color: #a5673f;
@breakpoint_done_line_color: darkgray;
@gutter_end_color: rgba(34,
    36,
    38,
    0.00001); // Alpha cannot be 0, it breaks in some browsers

body {
  background-color: @white;
  display: flex;
  flex-direction: column;
}

.main.ui.borderless.menu.container.placeholder {
  margin-top: 0;
}

.main.menu {
  .item {
    img.logo {
      margin-right: 1.5em;
    }
  }
}

.ui.table {
  tbody {
    tr {
      td.selectable {
        >a {
          &:not(.ui) {
            padding-top: 0.5em;
            padding-bottom: 0.5em;
          }
        }
      }
    }
  }
}

.ui.yellow.label.ObserveStyles-activeResourceLabel {
  background-image: linear-gradient(90deg, @borderColor 50%, transparent 50%),
    linear-gradient(90deg, @borderColor 50%, transparent 50%),
    linear-gradient(0deg, @borderColor 50%, transparent 50%),
    linear-gradient(0deg, @borderColor 50%, transparent 50%);
  background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
  background-size: 5px 3px, 5px 3px, 3px 5px, 3px 5px;
  background-position: left top, right bottom, left bottom, right top;
  animation: border-dance 4s infinite linear;
}

.ui.darkolive.label {
  background-color: #5d642d !important;
  border-color: #5d642d !important;
  color: #ffffff !important;
}

@keyframes border-dance {
  0% {
    background-position: left top, right bottom, left bottom, right top;
  }

  100% {
    background-position: left 20px top, right 20px bottom, left bottom 20px,
      right top 20px;
  }
}

.ObserveStyles-disabledSubsystems {
  color: @white;
  background-color: darken(darkgray, 30%);
  padding: 0.5em 0.8em;
  line-height: 1;
  font-size: 0.78571429rem;
  position: relative;
  vertical-align: baseline;
  margin: 0 0.14285714em;
  padding: 0.5833em 0.833em;
  text-transform: none;
  font-weight: bold;
  border: 0 solid transparent;
  border-radius: 0.28571429rem;
  transition: background 0.1s ease;
  background-image: repeating-linear-gradient(163deg,
      transparent 0%,
      transparent 48%,
      darken(white, 20%) 50%,
      darken(white, 20%) 58%,
      transparent 60%,
      transparent 100%);
}

.ObserveStyles-activeGuide {
  background-color: @greenHeaderColor  !important;
}

.ObserveStyles-activeInstrumentLabel {
  padding-bottom: 0.2em;
  text-align: center;
}

.ObserveStyles-resourceLabels {
  display: flex;
}

.ObserveStyles-tabTitleRow {
  display: flex;
  align-items: center;
  justify-content: center;
}


.ObserveStyles-filterActiveButton {
  background-color: @positiveColor  !important;
  box-shadow: none !important;
  color: @invertedTextColor  !important;

  &:hover {
    background-color: @positiveColorHover  !important;
    color: @invertedTextColor  !important;
  }
}

.ObserveStyles-tabLabel {
  width: 100%;
  text-align: center;
  margin: 0.2em;
  display: flex;
  align-items: center;
  justify-content: center;
}

.ObserveStyles-previewTabLabel {
  justify-content: space-between;
}

.ObserveStyles-loadButton {
  align-self: flex-end;
}

.ObserveStyles-loadedTab {
  flex-direction: column;
}

.ObserveStyles-dropOnTab {
  background-color: darken(@secondaryBackground, 10%) !important;
}


.ObserveStyles-previewTabLoadButton {
  align-self: flex-end;
  margin-left: auto;
}

.ObserveStyles-resourcesTabLabels {
  align-self: flex-end;
  margin-left: auto;
}

.ui.tabular.menu .item.ObserveStyles-tab {
  padding-top: 5px;
  padding-bottom: 5px;
}

.ObserveStyles-tab {
  min-width: 20%;
  outline: none;
}

.ObserveStyles-activeTabContent {
  background-color: @secondaryBackground  !important;
}

.ObserveStyles-inactiveTabContent {
  border-top: @border  !important;
  border-left: @border  !important;
  border-top-left-radius: @borderRadius;
  border-top-right-radius: @borderRadius;
  box-shadow: @boxShadow;
}

.ObserveStyles-errorTab {
  border-top: 3px red solid !important;
}

.ObserveStyles-fieldsNoBottom {
  margin-bottom: 0 !important;
}

.ObserveStyles-sequenceInfo {
  background-color: none;
  align-self: center;
}

.ObserveStyles-headerSidebarStyle {
  border-width: 1px;
  border-style: solid;
  border-color: @borderColor;
  padding-top: 0.5em !important;
  padding-bottom: 0.5em !important;
  .normalizedSegment;
  .widerColumn;
}

.ui.segment.ObserveStyles-tabSegment {
  padding: 0.4em;
  margin-bottom: 0;
  border-bottom: unset;
  display: flex;
  flex-direction: column;
}

.ObserveStyles-tabSegment {
  flex-grow: 1;
  flex-shrink: 1;
}

.ObserveStyles-configTableControls {
  margin-top: 0.2em;
  margin-bottom: 0.2em;
  display: flex;
  justify-content: space-between;
}

.ObserveStyles-tabControls {}

.ObserveStyles-tabTable {
  flex-grow: 1;
  flex-shrink: 1;
}

.ObserveStyles-sequenceControlForm {
  display: flex;
}

.ObserveStyles-sequencesControl {
  margin-top: 0.2em;
  margin-bottom: 0.2em;
  display: flex;
  justify-content: space-between;
}

.ObserveStyles-sequencesTable {
  flex-grow: 1;
  flex-shrink: 1;
}

.ObserveStyles-errorText {
  color: red;
}

.ObserveStyles-noRowsSegment {
  border: none !important;
}

.ObserveStyles-runFrom {
  padding-right: 1em;
}

.ObserveStyles-logSegment {
  .widerColumn;
}

.ui.segment.ObserveStyles-logSecondarySegment {
  padding-left: 0.4em;
  padding-right: 0.4em;
  padding-top: 0;
  padding-bottom: 0;
}

.ObserveStyles-logControlRow {
  margin-top: 0.2em;
  margin-bottom: 0.2em;
  padding: 0em;
  display: flex;
  justify-content: space-between;
}

.ObserveStyles-logTableRow {
  padding-left: 1em !important;
  padding-right: 1em !important;
  padding-bottom: 0.4em !important;
  padding-top: 0em !important;
}

.ui.form .ObserveStyles-selectorFields {
  margin-bottom: 0px;
  margin-top: 0px;
}

.ObserveStyles-selectorFields {
  display: flex;
}

.ui.form .field.ObserveStyles-logLevelBox {
  margin-bottom: 0px;
  margin-right: 1em;
}

.queueText() {
  color: @selectedTextColor;

  &:hover {
    color: @selectedTextColor;
  }
}

.ObserveStyles-queueTextColumn {
  .queueText;
  .queueFullCell;
}

.ObserveStyles-queueText {
  padding-left: @table_row_left_padding;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.ObserveStyles-queueIconColumn {
  min-width: 20px;
  .queueCenterCell;
}

.ObserveStyles-queueListPane {
  padding: 0px !important;
  margin-top: 0;
}

.ui.label.ObserveStyles-labelPointer {
  margin-top: .2em;
}

.ObserveStyles-resourcesLabels {
  display: flex;
}

.ObserveStyles-labelPointer {
  cursor: pointer;
}

.ObserveStyles-shorterRow {
  margin-bottom: -1em !important;
}

.ui.header.ObserveStyles-titleRow {
  padding-top: 0.2em;
  margin-bottom: 0.2em;

  &:after {
    top: 0px !important;
  }

  &:before {
    top: 0px !important;
  }
}

@keyframes ObserveStyles-blink {
  50% {
    opacity: 0;
  }
}

.ObserveStyles-blinking {
  animation-name: ObserveStyles-blink;
  animation-duration: 1700ms;
  animation-iteration-count: infinite;
  animation-timing-function: cubic-bezier(0.5, 0, 1, 1);
  animation-direction: alternate;
}

@keyframes calTableFlash {
  0% {
    box-shadow: none;
  }

  50% {
    box-shadow: 0 0 8px darken(lightblue, 20%);
  }

  0% {
    box-shadow: none;
  }
}

.ObserveStyles-calTableBorder {
  animation-name: calTableFlash;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: 2;
}

.ObserveStyles-filterPane {
  border-top: none !important;
  margin-left: 0px !important;
  margin-right: 0px !important;
  width: calc(100%) !important;
  max-width: calc(100%) !important;
}

@keyframes calRowFlash {
  0% {
    background-color: @background;
    // color: inherit;
  }

  50% {
    background-color: lightblue;
    // color: @white;
  }

  100% {
    background-color: @background;
    // color: inherit;
  }
}

.ObserveStyles-calRowBackground {
  animation-name: calRowFlash;
  animation-duration: 0.7s;
  animation-timing-function: linear;
  animation-fill-mode: none;
  animation-iteration-count: 2;
}

.ObserveStyles-autoMargin {
  margin: auto !important;
}

.ObserveStyles-queueAreaRow {
  display: flex;
  flex-direction: column;
  padding-bottom: 0.2em;
}

.ObserveStyles-queueArea {
  flex-grow: 4;
  .mobileSegment;
}

.ObserveStyles-headerSidebarArea {
  flex-grow: 4;
  display: none;
  padding-left: 0.5rem !important;
}

.ObserveStyles-logArea {
  // .appSegment;
}

.ObserveStyles-lowerRow {
  margin-top: -1em !important;
}

.ObserveStyles-observerField {
  padding-right: 0 !important;
}

.ObserveStyles-shorterFields {
  margin-bottom: 0.2em !important;
}

.ObserveStyles-configLabel {
  padding-top: 0.6em;
}

.ObserveStyles-observationProgressRow {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
  width: 100%;
  padding-right: 7px;
  margin-bottom: 1em;
}

.ObserveStyles-observationProgressRow .bar {
  height: 100% !important;
}

.ObserveStyles-observationProgressRow .label {
  text-align: center;
  width: 100%;
}

.ObserveStyles-tableDetailRow {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  padding: @table_detail_row_top_padding @table_detail_row_right_padding @table_detail_row_bottom_padding @table_row_left_padding;
  z-index: 100;
  position: relative;
}

.ObserveStyles-tableDetailRowWithGutter {
  margin-left: 20px;
}

.ObserveStyles-nodAndShuffleDetailRow {
  display: flex;
}

.ObserveStyles-nodAndShuffleControls {
  margin-left: 14px;
}

.ObserveStyles-observationProgressBar {
  margin: 0 !important;
  height: 1em !important;
  width: 100%;
}

.ObserveStyles-observationProgressBar .bar {
  height: 100% !important;
}

.ObserveStyles-observationProgressBar .label {
  text-align: center;
  width: 100%;
}

.ObserveStyles-observationBar {
  height: 100% !important;
}

.ObserveStyles-observationLabel {
  text-align: center;
  width: 100%;
}

.ObserveStyles-dividedProgress {
  width: 100%;
  display: flex;
}

.ObserveStyles-dividedProgressSectionLeft {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.ObserveStyles-dividedProgressSectionMiddle {
  border-radius: 0 !important;
  border-left: 1px solid black !important;
}

.ObserveStyles-dividedProgressSectionRight {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 1px solid black !important;
}

.ObserveStyles-dividedProgressBar .bar {
  min-width: 0 !important;
}

.ObserveStyles-dividedProgressBarLeft .bar {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.ObserveStyles-dividedProgressBarMiddle .bar {
  border-radius: 0 !important;
}

.ObserveStyles-dividedProgressBarRight .bar {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.ObserveStyles-guidingCell {
  display: flex;
  width: 100%;
  align-items: center;
  padding-left: @table_row_left_padding;
  padding-right: @table_row_left_padding;
}

.ObserveStyles-offsetsBlock {
  margin-left: auto;
  display: flex;
  align-items: center;
  text-align: right;
}

.ObserveStyles-offsetsNodLabel {
  font-weight: bold;
  margin-left: 10px;
  margin-right: 3px;
}

.ObserveStyles-offsetComponent {
  display: flex;
}

.ObserveStyles-configuringRow {
  display: flex;
  flex-grow: 1;
  width: 100%;
}

.ObserveStyles-specialStateLabel {
  align-self: center;
  text-overflow: ellipsis;
  overflow: hidden;
  word-wrap: break-word;
  white-space: nowrap;
  width: 100%;
  padding-right: 0.5em;
}

.ObserveStyles-progressMessage {
  font-weight: bold;
}

.ObserveStyles-subsystems {
  margin-left: auto;
  padding-right: 7px;
}

.ObserveStyles-componentLabel {
  text-overflow: ellipsis;
  overflow: hidden;
  word-wrap: break-word;
  white-space: nowrap;
}

.borderRight() {
  border-right-style: solid;
  border-right-color: @borderColor;
  border-right-width: 1px;
}

.borderLeft() {
  border-left-style: solid;
  border-left-color: @borderColor;
  border-left-width: 1px;
}

.borderTop() {
  border-top-style: solid;
  border-top-color: @borderColor;
  border-top-width: 1px;
}

.borderBottom() {
  border-bottom-style: solid;
  border-bottom-color: @borderColor;
  border-bottom-width: 1px;
}

.borderAll() {
  .borderRight();
  .borderLeft();
  .borderTop();
  .borderBottom();
}

.ObserveStyles-paddedStepRow {
  padding-left: @table_row_left_padding;
  padding-right: @table_row_left_padding;
}

.ObserveStyles-stepRow {
  font-size: smaller !important;
  text-overflow: ellipsis;
  word-wrap: break-word;
  white-space: nowrap;
  background-color: @white;
  color: @selectedTextColor;
  overflow: unset !important;
  .borderTop();
  outline: none;
  z-index: 200;
}

@keyframes pullUpRow {
  0% {
    transform: none;
  }

  100% {
    transform: translateY(-100%);
  }
}

.ObserveStyles-deletedRow {
  animation-name: pullUpRow;
  animation-duration: 0.5s;
  animation-timing-function: linear;
  animation-iteration-count: 1;
  animation-delay: 0.2s;
  animation-fill-mode: forwards;
}

.ObserveStyles-observeConfig {
  background-color: lightcyan !important;
}

.ObserveStyles-headerRowStyle {
  background-color: @background_color_6;
}

.ObserveStyles-infoLog {
  .borderTop();
  .borderRight();
  background-color: @white;
  color: @selectedTextColor;
}

.ObserveStyles-errorLog {
  .borderTop();
  .borderRight();
  background-color: @negativeBackgroundColor  !important;
  color: @negativeTextColor  !important;
}

.ObserveStyles-warningLog {
  .borderTop();
  .borderRight();
  background-color: @warningBackgroundColor  !important;
  color: @warningTextColor  !important;
}

.ObserveStyles-rowPositive {
  background-color: @positiveBackgroundColor;
  color: @positiveTextColor;
  box-shadow: @positiveBoxShadow;
}

.ObserveStyles-rowWarning {
  background-color: @warningBackgroundColor;
  color: @warningTextColor;
  box-shadow: @warningBoxShadow;
}

.ObserveStyles-rowActive {
  background-color: @background;
  color: @textColor;
  box-shadow: 0px 0px 0px @textColor inset;
  background-clip: padding-box;
}

.ObserveStyles-rowNegative {
  background-color: @negativeBackgroundColor;
  color: @negativeTextColor;
  box-shadow: @negativeBoxShadow;
}

.ObserveStyles-rowError {
  background-color: @negativeBackgroundColor;
  color: @negativeTextColor;
  box-shadow: @negativeBoxShadow;
}

.ObserveStyles-rowDisabled {
  pointer-events: none;
  background: @background;
  color: @disabledTextColor;
}

.rowDone(@background_color) {
  pointer-events: none;
  color: fadein(@disabledTextColor, 30%);
  background: @background_color;
}

.ObserveStyles-rowDone {
  .rowDone(@gutter_end_color);
}

.ObserveStyles-rowNone {
  background: @background;
}

.stepWithBreakpoint(@line_color) {
  background-image: linear-gradient(to right, @line_color 0px, @line_color);
  font-size: smaller !important;
  text-overflow: ellipsis;
  word-wrap: break-word;
  white-space: nowrap;
  .borderRight();
  .borderTop();
  background-size: 100% 4px;
  background-repeat: no-repeat;
  padding-top: 4px;
  overflow: visible !important;
  outline: none;
}

.ObserveStyles-stepRowWithBreakpoint {
  .stepWithBreakpoint(@breakpoint_line_color);
}

.ObserveStyles-stepDoneWithBreakpoint {
  .stepWithBreakpoint(@breakpoint_done_line_color);
}

.ObserveStyles-stepRowWithBreakpointHover {
  .stepWithBreakpoint(@breakpoint_line_color);
  background-color: @background;
  background-image: linear-gradient(to right,
      @borderColor 0px,
      @gutter_end_color 19px,
      lighten(@breakpoint_line_color, 30%) 0px,
      lighten(@breakpoint_line_color, 30%));
  padding-top: 0px;
}

.stepWithBreakpointAndControl(@line_color) {
  .stepWithBreakpoint(@line_color);
  background-image: linear-gradient(to right,
      @borderColor 0px,
      @gutter_end_color 19px,
      @line_color 19px,
      @line_color );
  padding-top: 4px;
}

.ObserveStyles-stepRowWithBreakpointAndControl {
  .stepWithBreakpointAndControl(@breakpoint_line_color);
}

.ObserveStyles-stepDoneWithBreakpointAndControl {
  .stepWithBreakpointAndControl(@breakpoint_done_line_color);
}

.ObserveStyles-centeredCell {
  display: flex;
  align-items: center;
  justify-content: center;
}

.ObserveStyles-fullCell {
  width: 100%;
  height: 100%;
}

.ObserveStyles-settingsCellHeader {
  display: flex;
  align-items: center;
  justify-content: center;
  padding-left: -2px;
}

.ObserveStyles-tableHeaderIcons {
  padding-bottom: 4px;
}

.ObserveStyles-buttonsRow {
  margin-right: 0.8rem !important;
  margin-left: 0.8rem !important;
}

.ObserveStyles-gutterCell {
  background-image: linear-gradient(to bottom,
      rgba(249, 0, 1, 0) 0%,
      rgba(249, 0, 1, 0) 0%),
    linear-gradient(to right, @borderColor 0px, @gutter_end_color 19px) !important;
  background-clip: padding-box;
  background-color: @white;
  width: 21px;
  min-width: 21px;
  .borderRight();
  position: relative;
  z-index: 0;
}

.ObserveStyles-controlCell {
  display: flex;
  justify-content: space-around;
  align-items: center;
  min-width: 42.3px;
  align-self: flex-start;
}

.breakPointHandle() {
  position: relative;
  z-index: 200;
  left: 3.82px;
  top: -4px;
  height: 13px;
  width: 13px;
  cursor: pointer;
  opacity: 0.8;
  transition: all 0.1s ease-in-out;

  &:hover {
    transform: translateX(-0.5px) scale(2);
  }
}

.ObserveStyles-breakPointHandleOff {
  .breakPointHandle();

  &:hover {
    left: 4.9px;
  }
}

.ObserveStyles-breakPointHandleOn {
  .breakPointHandle();

  &:hover {
    transform: translateX(-0.5px) scale(2) translateY(1px);
  }
}

.ObserveStyles-skipHandle {
  position: absolute;
  left: 2.8px;
  height: 13px;
  width: 13px;
  cursor: pointer;
  opacity: 0.8;
  transition: all 0.1s ease-in-out;

  &:hover {
    transform: translateX(-0.5px) scale(1.2);
  }
}

.ObserveStyles-runningIconCell {
  justify-content: center;
  min-width: 24px;
  height: 100%;
  align-items: center;
  align-self: flex-start;
  width: 100%;
  display: flex;
}

.ObserveStyles-completedIconCell {
  justify-content: center;
  min-width: 24px;
  height: 100%;
  align-items: center;
  align-self: flex-start;
  width: 100%;
  display: flex;
}

.ObserveStyles-errorCell {
  justify-content: center;
  min-width: 24px;
  height: 100%;
  align-items: center;
  align-self: flex-start;
  width: 100%;
  display: flex;
  padding-bottom: 8px;
}

.ObserveStyles-skippedIconCell {
  justify-content: center;
  min-width: 24px;
  height: 100%;
  align-items: center;
  align-self: flex-start;
  width: 100%;
  display: flex;
  padding-right: 10px;
}

.ObserveStyles-iconCell {
  justify-content: center;
  min-width: 24px;
  height: 100%;
  align-items: center;
  width: 100%;
  display: flex;
  padding-bottom: 8px;
}

.ObserveStyles-settingsCell {
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 15px;
  width: 100%;
  height: 100%;
  padding-bottom: 9px;
}

.ObserveStyles-logIconRow {
  margin: 0 0 10px 2px !important;
}

.ObserveStyles-logIconHeader {
  margin: 0 0 10px 0 !important;
}

.ObserveStyles-selectedIcon {
  .queueText;
  margin-right: 0px !important;
}

.ObserveStyles-runningIcon {
  .queueText;
}

.ObserveStyles-completedIcon {
  .queueText;
}

.ObserveStyles-breakPointOnIcon {
  position: relative;
  color: @grey;
  left: 2.5px;
  top: -6px;

  &:hover {
    color: darken(@grey, 20%);
  }
}

.ObserveStyles-breakPointOffIcon {
  position: relative;
  color: @grey;
  left: 1.5px;
  top: -6px;

  &:hover {
    color: darken(@grey, 20%);
  }
}

.clipboardIconMixin() {
  display: flex;
  padding-top: 4px;
  justify-content: center;
  height: 100%;
  align-items: center;
  width: 100%;
}

.ObserveStyles-clipboardIconDiv {
  min-width: 38px;
  .clipboardIconMixin;
}

.ObserveStyles-clipboardIconHeader {
  .clipboardIconMixin;
  padding-left: 3px;
}

.ObserveStyles-tableHeader {
  .borderLeft();
  font-weight: bold;
  color: @black;
  background-color: @background_color_6;
  outline: none;
  min-height: 33px;
  height: 33px;
  display: flex;
  align-items: center;
}

.ObserveStyles-controlCellRow {
  padding-right: 0;
  padding-left: 0;
  overflow: unset !important;
}

.ObserveStyles-settingsCellRow {
  min-width: 35px;
  padding-right: 5;
  padding-left: 0;
  overflow: unset !important;
  pointer-events: auto;
}

//===========================
// Styles for column dragging
.DragHandle {
  flex: 0 0 16px;
  z-index: 2;
  cursor: col-resize;
  color: rgba(0, 0, 0, 0.2);
  height: 100%;
}

.DragHandle:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.DragHandleActive,
.DragHandleActive:hover {
  color: rgba(0, 0, 0, 0.6);
  z-index: 3;
}

.DragHandleIcon {
  flex: 0 0 12px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.ReactVirtualized__Table__headerTruncatedText {
  flex: auto;
  min-width: 20px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

// Get the same background color as a button
.ObserveStyles-labelAsButton {
  @import "~fomantic-ui-less/themes/default/elements/button.variables";
  background: @background  !important;
  padding-top: @verticalPadding  !important;
  padding-bottom: @verticalPadding  !important;
}

//===========================
// End styles for column dragging

//=================
.ObserveStyles-inline {
  display: inline;
}

.ObserveStyles-offsetGrid {
  margin-right: 1em !important;
}

.ObserveStyles-hidden {
  display: none;
}

.ObserveStyles-tdNoPadding {
  padding: 0 !important;
}

.ObserveStyles-noOpacity {
  opacity: 0;
}

.ui.progress.vcentered {
  margin-bottom: 0;
}

.ObserveStyles-runningLabel {
  background-color: @warningBackgroundColor  !important;
  color: @warningTextColor  !important;
}

.ObserveStyles-smallTextArea {
  font-size: smaller;
}

.appSegment() {
  padding-top: 0.5em !important;
  padding-bottom: 0.5em !important;
}

.ObserveStyles-stepsTable {
  background-image: linear-gradient(to bottom,
      rgba(249, 0, 1, 0) 0%,
      rgba(249, 0, 1, 0) 0%),
    linear-gradient(to right,
      rgba(34, 36, 38, 0.15) 0px,
      rgba(34, 36, 38, 0.00001) 20px) !important;
  background-clip: content-box padding-box !important;
}

.ObserveStyles-logTable {
  margin-bottom: 0.2em;
  font-size: 1em;
}

.ReactVirtualized__Table__headerRow {
  font-weight: 700;
  display: flex;
  flex-direction: row;
  align-items: center;
  .borderRight();
  .borderLeft();
  .borderTop();
}

.ReactVirtualized__Table__headerColumn {
  display: flex;
  flex-direction: row;
  justify-content: center;
  padding: 0;

  &:first-of-type {
    border-left: none;
  }
}

.ReactVirtualized__Table__headerTruncatedText {
  padding-left: @table_row_left_padding;
}

.ReactVirtualized__Table__rowColumn {
  .borderLeft();
  min-width: 20px;
  display: flex;
  align-items: center;
  font-size: small;
  text-overflow: ellipsis;
  white-space: nowrap;
  height: 100%;

  &:first-of-type {
    border-left: none;
  }
}

.ObserveStyles-rightCell {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

.ObserveStyles-leftCell {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

.ReactVirtualized__Table__Grid {
  .borderRight();
  .borderLeft();
  .borderBottom();
  .borderTop();
  outline: none;
}

.ReactVirtualized__Grid__innerScrollContainer {
  .borderBottom();
  scroll-behavior: smooth;
}

.ReactVirtualized__Table__row {
  display: flex;
  flex-direction: row;
  align-items: center;

  &:first-of-type {
    border-top: none;
  }

  &:hover {
    background-color: @transparentBlack;
    color: @selectedTextColor;
  }
}

.ObserveStyles-offsetCellWrapper {
  padding-top: 0.4em;
}

.fullCell() {
  width: 100%;
  height: 100%;
}

.queueFullCell() {
  .fullCell;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: 0px;
}

.queueCenterCell() {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0px;
}

.ObserveStyles-expandedRunningRow {
  display: flex;
  flex-direction: column;
}

.ObserveStyles-expandedTopRow {
  height: 100%;
}

.ObserveStyles-expandedBottomRow {
  height: 100%;
  background: @secondaryBackground;
  position: relative;
  z-index: 100;
  border-top: @border;
}

.ObserveStyles-errorIcon {
  .queueText;
  margin-bottom: 6px !important;
}

.widerColumn() {
  padding-left: 0.5rem !important;
  padding-right: 0.5rem !important;
}

.normalizedSegment() {
  border-radius: unset !important;
  box-shadow: unset !important;
}

@media only screen and (min-width: 767px) {
  .ObserveStyles-onlyMobile {
    display: none !important;
  }

}

.mobileSegment() {
  padding-right: 0 !important;
  padding-left: 0 !important;
}

.noselect() {
  -moz-user-select: none;
  user-select: none;
}

.ObserveStyles-noselect {
  .noselect;
}

.ObserveStyles-draggableRow {
  .noselect;
}

.ObserveStyles-draggedRowHelper {
  box-shadow: 0 5px 5px -5px rgba(0, 0, 0, 0.2),
    0 -5px 5px -5px rgba(0, 0, 0, 0.2);
  background-color: @selectableInvertedBackground;
  border-bottom: @border;
  border-left: @border;
  border-right: @border;
  cursor: row-resize;
}

.ObserveStyles-draggedRowHelper.horizontalItem {
  cursor: col-resize;
}

.ObserveStyles-draggedRowHelper.gridItem {
  background-color: transparent;
  white-space: nowrap;
  box-shadow: none;

  .wrapper {
    background-color: @selectableInvertedBackground;
    box-shadow: 0 0 7px rgba(0, 0, 0, 0.15);
  }
}

.ObserveStyles-defaultCursor {
  cursor: default !important;
}

.ui-alerts.ObserveStyles-toast {
  padding-bottom: 32px;
}

p.ObserveStyles-confirmLine {
  margin-bottom: 0.5em;
  font-weight: bold;
}

.ObserveStyles-mainUI {
  height: 100vh;
  width: 100vw;
  margin-bottom: 0px;
  margin-top: 0px;
  display: flex;
  flex-direction: column;
}

.ui.menu.ObserveStyles-footer {
  margin-bottom: 0;
  border-radius: unset;
  margin-top: auto;
  height: 46px;
  width: 100%;
  max-width: 100%;
  min-height: 46px;
}

.ObserveStyles-loginError {
  padding: 1em;
}

.ObserveStyles-subsystemsForm {
  display: flex;
  align-items: center;
}

.ObserveStyles-subsystemsForm .field .ui.checkbox {
  margin-right: 1em;
}

@media only screen and (min-width: 767px) {
  .ObserveStyles-queueAreaRow {
    flex-direction: row;
  }

  .ObserveStyles-queueArea {}

  .ObserveStyles-headerSidebarArea {
    display: inherit;
  }
}

@media only screen and (max-width: 767px) {
  .ObserveStyles-notInMobile {
    display: none !important;
  }

  .ui.container {
    width: 100% !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }

  .ObserveStyles-tabSegment {
    .mobileSegment;
  }

  .ObserveStyles-queueArea {}

  .ObserveStyles-headerSidebarArea {}

  .ObserveStyles-logSegment {
    .mobileSegment;
  }

  .ReactVirtualized__Table__rowColumn {
    padding-right: 0.5em;
    padding-left: 0.5em;
  }

  .ReactVirtualized__Table__headerTruncatedText {
    padding-right: 0.5em;
    padding-left: 0.5em;
  }

  .ObserveStyles-queueAreaRow {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }

  .ObserveStyles-logArea {
    padding: 0em !important;
  }

  .ObserveStyles-emptyInstrumentTab {
    min-height: 25.4em;
  }

  .ObserveStyles-stepsListPaneUnauth {
    height: ~"calc(100% - 0em)";
    margin-top: 0.1em !important;
    margin-bottom: 0.1em !important;
  }
}